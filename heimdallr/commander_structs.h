// This file is generated by make_commander_structs.py
namespace nlohmann {
template <> struct adl_serializer<EncodedImage> {
    static void to_json(json& j, const EncodedImage& p) {
        j = json::object();
        j["szx"] = p.szx;
        j["szy"] = p.szy;
        j["type"] = p.type;
        j["message"] = p.message;
    }
    static void from_json(const json& j, EncodedImage& p) {
        p = EncodedImage();
        j.at("szx").get_to(p.szx);
        j.at("szy").get_to(p.szy);
        j.at("type").get_to(p.type);
        j.at("message").get_to(p.message);
    }
   };
template <> struct adl_serializer<Status> {
    static void to_json(json& j, const Status& p) {
        j = json::object();
        j["gd_bl"] = p.gd_bl;
        j["pd_bl"] = p.pd_bl;
        j["gd_tel"] = p.gd_tel;
        j["pd_tel"] = p.pd_tel;
        j["gd_snr"] = p.gd_snr;
        j["pd_snr"] = p.pd_snr;
        j["pd_offset"] = p.pd_offset;
        j["closure_phase_K1"] = p.closure_phase_K1;
        j["closure_phase_K2"] = p.closure_phase_K2;
        j["v2_K1"] = p.v2_K1;
        j["v2_K2"] = p.v2_K2;
    }
    static void from_json(const json& j, Status& p) {
        p = Status();
        j.at("gd_bl").get_to(p.gd_bl);
        j.at("pd_bl").get_to(p.pd_bl);
        j.at("gd_tel").get_to(p.gd_tel);
        j.at("pd_tel").get_to(p.pd_tel);
        j.at("gd_snr").get_to(p.gd_snr);
        j.at("pd_snr").get_to(p.pd_snr);
        j.at("pd_offset").get_to(p.pd_offset);
        j.at("closure_phase_K1").get_to(p.closure_phase_K1);
        j.at("closure_phase_K2").get_to(p.closure_phase_K2);
        j.at("v2_K1").get_to(p.v2_K1);
        j.at("v2_K2").get_to(p.v2_K2);
    }
   };
}
// End of file
// This file is generated by make_commander_structs.py
// Do not edit this file manually.
